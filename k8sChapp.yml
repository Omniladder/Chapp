apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-rev-proxy 
  annotations:
    {}
spec:
  ingressClassName: nginx
  rules:
  - http:
      paths:
      - path: /api
        pathType: Prefix
        backend:
          service:
            name: chapp-backend
            port:
              number: 3000
      - path: /
        pathType: Prefix
        backend:
          service:
            name: chapp-frontend
            port:
              number: 80
---
apiVersion: v1
kind: Service
metadata:
  name: chapp-frontend
  labels:
    app: chapp
    tier: frontend
    role: master
spec:
  ports:
  - port: 80
    targetPort: 80
  selector:
    app: chapp
    tier: frontend
    role: master
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  labels:
    app: chapp
    tier: frontend
    role: master
spec:
  replicas: 1
  selector:
    matchLabels:
      app: chapp
      tier: frontend
      role: master
  template:
    metadata:
      labels:
        app: chapp
        tier: frontend
        role: master
    spec:
      containers:
      - name: master-frontend
        image: chapp-frontend:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 80
        resources:
          requests:
            cpu: "100m"
            memory: "128Mi"
          limits:
            cpu: "200m"
            memory: "256Mi"
---
apiVersion: v1
kind: Service
metadata:
  name: chapp-backend
  labels:
    app: chapp
    tier: backend
    role: master
spec:
  ports:
  - port: 3000
    targetPort: 3000 
  selector:
    app: chapp
    tier: backend 
    role: master
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
  labels:
    app: chapp
    tier: backend
    role: master
spec:
  replicas: 1
  selector:
    matchLabels:
      app: chapp
      tier: backend
      role: master
  template:
    metadata:
      labels:
        app: chapp
        tier: backend
        role: master
    spec:
      containers:
      - name: master-backend
        image: chapp-backend:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 3000
        resources:
          requests:
            cpu: "800m"
          limits:
            cpu: "1"
        env:
        - name: REDIS_HOST
          value: "redis"
        - name: REDIS_PORT
          value: "6379"
---
apiVersion: v1
kind: Service
metadata:
  name: db
  labels:
    app: chapp
    tier: db 
    role: master
spec:
  ports:
  - port: 5432
    targetPort: 5432
  selector:
    app: chapp
    tier: db
    role: master
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: db
  labels:
    app: chapp
    tier: db
    role: master
spec:
  replicas: 1
  selector:
    matchLabels:
      app: chapp
      tier: db
      role: master
  template:
    metadata:
      labels:
        app: chapp
        tier: db 
        role: master
    spec:
      containers:
      - name: master-db
        image: postgres:13
        envFrom:
          - configMapRef:
              name: env-file
        ports:
        - containerPort: 5432
---
apiVersion: v1
kind: Service
metadata:
  name: redis
  labels:
    app: chapp
    tier: db 
    role: redis
spec:
  ports:
  - port: 6379
    targetPort: 6379
  selector:
    app: chapp
    tier: db
    role: redis
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  labels:
    app: chapp
    tier: db
    role: redis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: chapp
      tier: db
      role: redis
  template:
    metadata:
      labels:
        app: chapp
        tier: db 
        role: redis
    spec:
      containers:
      - name: redis-db
        image: redis:8.2
        ports:
        - containerPort: 6379
